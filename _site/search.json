[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Blogs",
    "section": "",
    "text": "Bayer Leverkusen Goal Analysis\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJul 15, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Gareth Edwards",
    "section": "",
    "text": "Hi, I’m Gareth Edwards from Cape Town, South Africa. I am a Data Scientist at the Council for Scientific and Industrial Research. I’ve got my undergraduate degree in Bsc Computer Science and Applied Stats, BSc Honours in Computer Science and Bsc Masters in Data Science all from the University of Cape Town.\nBut really I just love football. Far from being young enough, or good enough to burst on to the scene like Micah Richards, I have decided to take the less flashy path and try my hand in football analytics instead and herein lies my attempt to get into the football business.\nFootball, much like the world has been saturated in data to the point where we are drowning in it. Data Science is everywhere and new research on football is being done on every conceivable topic of the game. While data is great and gives us the tools to view patterns not apparent to the human eye, we also run the risk of working so hard at the data that we end up forgetting what the goal was in the first place.\nSo, here’s what I propose, lets keep it simple… Please. Boil it down, take a step back, see the bigger picture. As scientists we love to sound smart and look smart and feel smart but at the end of the day, all the smarts is nothing if nobody else understands you. Football is a beautiful game, but it also, just a game. The more we complicate anything in life, the more complicated life becomes.\nWhat I have seen in football analytics so far, bar a few groundbreaking pieces of work (thank you Karun), is just a whole lot of over complication. In my series of blog posts I aim to keep it simple and concise. My approach is to start with the bigger picture and then work my way to the data from there. There is no use finding problems for the sake of solving problems (the way of many a scientist).\nSo, take a look through my blogs and I hope you see the value and appreciate the simplcity in the work! Please don’t hesitate to reach out if you would like to chat or even to offer some constructive criticism. I am all ears."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Gareth Edwards",
    "section": "",
    "text": "Masters in Data Science | Feb 2020 - December 2022 | University of Cape Town\nHonours in Computer Science | April 2019 - March 2020 | University of Cape Town\nBSc Computer Science and Applied Statistics | Feb 2015 - April 2019 | University of Cape Town"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Gareth Edwards",
    "section": "Experience",
    "text": "Experience\n\nResearch Data Scientist | Council for Scientific and Industrial Research | April 2020 - present\nData Science Tutor at Edx | 2U | Nov 2023 - present\nFreelance Blogger | Data Bear | Dec 2023 - present"
  },
  {
    "objectID": "posts/Bayer Leverkusen/index.html",
    "href": "posts/Bayer Leverkusen/index.html",
    "title": "Bayer Leverkusen Goal Analysis",
    "section": "",
    "text": "Bayer Leverkusen, or more recently known as Bayer Neverlusen. The German invincibles of the 23/24 Bundesliga season. Were they a team with no weakness? Or can the data show us a picture of how Bayer Leverkusen could have been nullified?\nShow passing network shiny app.\n\n\nShow average passing network vs goals scored passing network."
  },
  {
    "objectID": "overHere.html",
    "href": "overHere.html",
    "title": "testDoc",
    "section": "",
    "text": "#| standalone: true\n\nprint(getwd())\nleverkusen_23_24_events = readRDS('posts/data/leverkusen_23_24_events.rds')\nleverkusen_23_24_matches = readRDS('posts/data/leverkusen_23_24_matches.rds')\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(shiny)\nlibrary(shinythemes)\nlibrary(shinylive)\nlibrary(SBpitch)\nlibrary(ggsoccer)\n\n# Function to count passes before each goal\nmoves_before_goal &lt;- function(goal_index, events_df) {\n  goal_event &lt;- events_df %&gt;% filter(index == goal_index)\n  team_id &lt;- goal_event$possession_team.name\n  \n  # Loop through events backwards from the goal event\n  event_list = list()\n  for (i in (goal_index):1) {\n    event &lt;- events_df[i, ]\n    \n    # Stop if possession changes to a different team\n    if (event$possession_team.name != goal_event$possession_team.name |\n        !(event$type.name %in% c(\"Ball Receipt*\",\n                                 \"Pass\",\n                                 \"Carry\",\n                                 \"Pressure\",\n                                 \"Dribble\",\n                                 \"Dribbled Past\",\n                                 \"Shield\",\n                                 \"50/50\",\n                                 \"Shot\")) |\n        event$pass.outcome.name %in% c(\"Out\", \"Incomplete\")) {\n      break\n    }\n    \n    # add event to the list\n    event_list[[length(event_list) + 1]] &lt;- event\n    \n  }\n  \n  # Convert the list to a dataframe\n  events_before_goal_df &lt;- do.call(rbind, event_list)\n  return(events_before_goal_df)\n}\n\n# plot the pass map\npassmap_plot &lt;- function(data) {\n  \n  data &lt;- data %&gt;%\n    mutate(x=unlist(lapply(location, function(v) as.numeric(v[1]))),\n           y=unlist(lapply(location, function(v) as.numeric(v[2]))),\n           pass_end_x=unlist(lapply(pass.end_location, function(v) ifelse(is.null(v), NA, as.numeric(v[1])))),\n           pass_end_y=unlist(lapply(pass.end_location, function(v) ifelse(is.null(v), NA, as.numeric(v[2])))),\n           carry_end_x=unlist(lapply(carry.end_location, function(v) ifelse(is.null(v), NA, as.numeric(v[1])))),\n           carry_end_y=unlist(lapply(carry.end_location, function(v) ifelse(is.null(v), NA, as.numeric(v[2]))))) %&gt;%\n    ungroup() %&gt;%\n    filter(!(type.name %in% c(\"Pressure\", \"Dribbled Past\", \"Ball Receipt*\", \"Carry\"))) %&gt;%\n    mutate(row_number = row_number()) %&gt;%\n    mutate(prev_x = lag(x), \n           prev_y = lag(y),\n           prev_pass_end_x = lag(pass_end_x),\n           prev_pass_end_y = lag(pass_end_y))\n  \n  # plot passes and carries on pitch (including linear model of best fit line)\n  # create custom legend\n  if(nrow(data)==1){\n    create_Pitch() +\n      geom_point(data = data, aes(x = x, y = y, size=13, alpha=0.5)) +\n      geom_text(data = data, aes(x = x, y = y, label = row_number), \n                size = 3, color = \"red\", vjust = -1) +\n      scale_y_reverse() +\n      theme_pitch() +\n      ggtitle(paste0(\"Shot at Goal (no passing sequence)\")) +\n      theme(plot.title = element_text(size = 20, face = \"bold\"),\n            plot.subtitle = element_text(size = 16),\n            legend.position=\"none\")\n  }\n  else{\n    create_Pitch() +\n      geom_point(data = data, aes(x = x, y = y)) +\n      geom_segment(data = data, aes(x = x, y = y, xend = pass_end_x, yend = pass_end_y, linetype = \"Passes\", color = \"Passes\"),\n                   arrow = arrow(length = unit(0.08, \"inches\"))) +\n      geom_segment(data = data, aes(x = prev_pass_end_x, y = prev_pass_end_y, xend = x, yend = y, linetype = \"Carries\", color = \"Carries\")) +\n      \n      geom_text(data = data, aes(x = x, y = y, label = row_number), \n                size = 5, color = \"red\", vjust = -1) +\n      \n      geom_smooth(data = data, aes(x = x, y = y, linetype = \"Avg Direction of Play\", color = \"Avg Direction of Play\"), method = \"lm\", se = FALSE) +\n      \n      scale_y_reverse() +\n      \n      \n      scale_linetype_manual(name = \"Legend\",\n                            values = c(\"Passes\" = \"solid\", \"Carries\" = \"dotted\", \"Avg Direction of Play\" = \"solid\")) +\n      scale_color_manual(name = \"Legend\",\n                         values = c(\"Passes\" = \"black\", \"Carries\" = \"black\", \"Avg Direction of Play\" = \"blue\")) +\n      guides(linetype = guide_legend(override.aes = list(color = c(\"black\", \"blue\", \"black\")))) +\n      theme_pitch() +\n      theme(legend.position = \"right\")\n  }\n  \n}\n\n# interactive passing sequence shiny app\nui &lt;- fluidPage(\n  titlePanel(\"Interactive Passing Path to Goal\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"team_input\", \"Select Team\", choices = unique(leverkusen_23_24_events$team.name)),\n      selectInput(\"match_input\", \"Select Match\", choices = unique(leverkusen_23_24_matches$match_name)),\n      selectInput(\"goal_index\", \"Select Goal Index\", choices = NULL)\n    ),\n    \n    mainPanel(\n      plotOutput(\"passmap\"),\n      fluidRow(\n        #column(6, tableOutput('playersInMove')),\n        column(6, tableOutput('goalScorer'))\n      )\n    )\n  )\n)\n\nserver &lt;- function(input, output, session) {\n  \n  observe({\n    match_goals &lt;- leverkusen_23_24_events %&gt;%\n      filter(match_name == input$match_input & possession_team.name == input$team_input &\n               shot.outcome.name == \"Goal\" & shot.type.name == \"Open Play\") %&gt;%\n      select(timestamp_readable)\n\n    updateSelectInput(session, \"goal_index\", choices = match_goals$timestamp_readable)\n  })\n\n  # selected_events &lt;- reactive({\n  #   req(input$match_id, input$goal_index)\n  #   aMatch &lt;- leverkusen_23_24_events %&gt;% filter(match_id == input$match_id)\n  #   moves_before_goal(input$goal_index, aMatch)\n  # })\n  \n  output$passmap &lt;- renderPlot({\n    # req(selected_events())\n    aMatch &lt;- leverkusen_23_24_events %&gt;% filter(match_name == input$match_input)\n    print(unique(aMatch$match_id))\n    # get index for the selected timestamp\n    goal_index = aMatch %&gt;% filter(timestamp_readable==input$goal_index & shot.outcome.name==\"Goal\") %&gt;% pull(index)\n    print(goal_index)\n\n    events_before_goal = moves_before_goal(goal_index, aMatch)\n\n    passes_before_goal &lt;- events_before_goal %&gt;%\n      select(c(index, type.name, player.name, pass.recipient.name, location, pass.end_location, carry.end_location)) %&gt;%\n      arrange(index)\n\n    passes_before_goal[passes_before_goal == \"NULL\"] &lt;- NA\n    par(mar = c(0.1, 0.1, 0.1, 0.1))\n    passmap_plot(passes_before_goal)\n  })\n\n  output$playersInMove &lt;- renderTable({\n    aMatch &lt;- leverkusen_23_24_events %&gt;% filter(match_name == input$match_input)\n    goal_index &lt;- aMatch %&gt;% filter(timestamp_readable == input$goal_index & shot.outcome.name == \"Goal\") %&gt;% pull(index)\n\n    events_before_goal &lt;- moves_before_goal(goal_index, aMatch)\n    players_involved &lt;- events_before_goal %&gt;%\n      arrange(index) %&gt;%\n      filter(team.name==input$team_input & type.name %in% c(\"Pass\", \"Shot\")) %&gt;%\n      mutate(row_number = row_number()) %&gt;%\n      select(row_number, player.name) %&gt;%\n      rename(`Order of Players Involvement`= player.name, `No.` = row_number)\n\n    players_involved\n  })\n  \n  output$goalScorer &lt;- renderTable({\n    aMatch &lt;- leverkusen_23_24_events %&gt;% filter(match_name == input$match_input)\n    scorer &lt;- aMatch %&gt;% filter(timestamp_readable == input$goal_index & shot.outcome.name == \"Goal\") %&gt;%\n      select(player.name) %&gt;%\n      rename(`Goal Scorer` = player.name)\n  })\n}\n\nshinyApp(ui, server)"
  }
]